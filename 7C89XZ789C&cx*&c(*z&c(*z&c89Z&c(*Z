# Hide errors and startup text
$ErrorActionPreference = "SilentlyContinue"
$ProgressPreference = "SilentlyContinue"
Clear-Host

# --- ASCII Header ---
Write-Host "  _________.__                         ___________________   _________ .__                   __                 " -ForegroundColor Green
Write-Host " /   _____/|__| _____   _____   ______ \______   \_   ___ \  \_   ___ \|  |__   ____   ____ |  | __ ___________ " -ForegroundColor Green
Write-Host " \_____  \ |  |/     \ /     \ /  ___/  |     ___/    \  \/  /    \  \/|  |  \_/ __ \_/ ___\|  |/ // __ \_  __ \" -ForegroundColor Green
Write-Host " /        \|  |  Y Y  \  Y Y  \\___ \   |    |   \     \____ \     \___|   Y  \  ___/\  \___|    <\  ___/|  | \/" -ForegroundColor Green
Write-Host "/_______  /|__|__|_|  /__|_|  /____  >  |____|    \______  /  \______  /___|  /\___  >\___  >__|_ \\___  >__|   " -ForegroundColor Green
Write-Host "        \/          \/      \/     \/                    \/          \/     \/     \/     \/     \/    \/       " -ForegroundColor Green
Write-Host ""
Start-Sleep 2

function LoadingBar {
    param([int]$Seconds = 5)
    for ($i=0; $i -le 100; $i+=5) {
        Write-Host -NoNewline ("`r[" + ("=" * ($i/5)) + (" " * ((100-$i)/5)) + "] $i%")
        Start-Sleep -Milliseconds ($Seconds*50/20)
    }
    Write-Host ""
}

# --- Step 1: Prefetch ---
Write-Host "`n>>> Opening Prefetch Viewer..." -ForegroundColor Green
LoadingBar -Seconds 3
Start-Process "explorer.exe" "C:\Windows\Prefetch"
Write-Host "`nScroll through the Prefetch window, then press Enter to continue..." -ForegroundColor Yellow
$null = Read-Host

# --- Step 2: Regedit ---
Write-Host "`n>>> Opening Registry Editor at Compatibility Assistant Store..." -ForegroundColor Green
LoadingBar -Seconds 3
Start-Process "regedit.exe"
Write-Host "`nNavigate to:" -ForegroundColor Yellow
Write-Host "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Compatibility Assistant\Store" -ForegroundColor Yellow
Write-Host "`nScroll through the Registry Editor, then press Enter to continue..." -ForegroundColor Yellow
$null = Read-Host

# --- End Card (looks like it's done) ---
Write-Host ""
Write-Host "__________                ___.                 " -ForegroundColor Green
Write-Host "\______   \___.__. ____   \_ |__ ___.__. ____  " -ForegroundColor Green
Write-Host " |    |  _<   |  |/ __ \   | __ <   |  |/ __ \ " -ForegroundColor Green
Write-Host " |    |   \\___  \  ___/   | \_\ \___  \  ___/ " -ForegroundColor Green
Write-Host " |______  // ____|\___  >  |___  / ____|\___  >" -ForegroundColor Green
Write-Host "        \/ \/         \/       \/\/         \/ " -ForegroundColor Green
Start-Sleep 3

# --- Fake Hack Sequence ---
Clear-Host
Write-Host ">>> Unauthorized access detected..." -ForegroundColor Green
Start-Sleep 1
Write-Host ">>> Initializing backdoor..." -ForegroundColor Green
LoadingBar -Seconds 2

$steps = @(
    "Bypassing Windows Defender...",
    "Extracting Chrome saved passwords...",
    "Stealing WiFi credentials...",
    "Collecting Discord tokens...",
    "Searching for bank details...",
    "Uploading Documents folder to remote server...",
    "Wiping local event logs...",
    "Injecting persistence mechanism...",
    "Finalizing data exfiltration..."
)

foreach ($step in $steps) {
    Write-Host $step -ForegroundColor Green
    LoadingBar -Seconds 2
    Start-Sleep 1
}

Start-Sleep 2
Clear-Host

# --- SIKE Reveal ---
Write-Host ""
Write-Host "███████╗██╗ ██████╗ ██╗  ██╗███████╗" -ForegroundColor Red
Write-Host "██╔════╝██║██╔═══██╗██║ ██╔╝██╔════╝" -ForegroundColor Red
Write-Host "███████╗██║██║   ██║█████╔╝ █████╗  " -ForegroundColor Red
Write-Host "╚════██║██║██║   ██║██╔═██╗ ██╔══╝  " -ForegroundColor Red
Write-Host "███████║██║╚██████╔╝██║  ██╗███████╗" -ForegroundColor Red
Write-Host "╚══════╝╚═╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝" -ForegroundColor Red
Write-Host ""
Write-Host "Relax... You just got pranked! 😆" -ForegroundColor Yellow
Write-Host ""
Start-Sleep 6
exit
